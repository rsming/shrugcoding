{
    "AWSTemplateFormatVersion": "2010-09-09",
    "Description": "shrugcoding network stack cloudformation template.",
    "Parameters": {
        "EnvironmentName": {
            "Description": "An environment name that is prefixed to resource names",
            "Type": "String",
            "AllowedValues": [
                "dev",
                "test",
                "prod"
            ]
        },
        "HostedZoneName": {
            "Description": "Do not forget to add '.' (period) at the end. For example \"shrugcoding.click.\"",
            "Type": "String",
            "Default": "shrugcoding.click."
        },
        "HostedZoneId": {
            "Description": "hosted zone ID for the region that the bucket created in: US East (N. Virginia) s3-website-us-east-1.amazonaws.com",
            "Type": "String",
            "Default": "Z06673401UW1F6Y1K18JC"
        },
        "VpcCIDR": {
            "Description": "Please enter the IP range (CIDR notation) for this VPC",
            "Type": "String",
            "Default": "10.192.0.0/16"
        },
        "PublicSubnetCIDR1": {
            "Description": "Please enter the IP range (CIDR notation) for the public subnet in the first Availability Zone",
            "Type": "String",
            "Default": "10.192.1.0/24"
        },
        "PublicSubnetCIDR2": {
            "Description": "Please enter the IP range (CIDR notation) for the public subnet in the second Availability Zone",
            "Type": "String",
            "Default": "10.192.2.0/24"
        }
    },
    "Resources": {
        "vpcShrugcoding": {
            "Type": "AWS::EC2::VPC",
            "Properties": {
                "CidrBlock": {
                    "Ref": "VpcCIDR"
                },
                "EnableDnsSupport": true,
                "EnableDnsHostnames": true,
                "Tags": [{
                        "Key": "Name",
                        "Value": { "Fn::Join": [ "-", [ "shrugcoding", { "Ref": "EnvironmentName" } ] ] }
                }]
            }
        },
        "igwShrugcoding": {
            "Type": "AWS::EC2::InternetGateway",
            "Properties": {
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Ref": "EnvironmentName"
                        }
                    }
                ]
            }
        },
        "igwaShrugcoding": {
            "Type": "AWS::EC2::VPCGatewayAttachment",
            "Properties": {
                "InternetGatewayId": {
                    "Ref": "igwShrugcoding"
                },
                "VpcId": {
                    "Ref": "vpcShrugcoding"
                }
            }
        },
        "publicSubnet1": {
            "Type": "AWS::EC2::Subnet",
            "Properties": {
                "VpcId": {
                    "Ref": "vpcShrugcoding"
                },
                "AvailabilityZone": {
                    "Fn::Select": [ 0, { "Fn::GetAZs": "" } ]
                },
                "CidrBlock": {
                    "Ref": "PublicSubnetCIDR1"
                },
                "MapPublicIpOnLaunch": true,
                "Tags": [{
                        "Key": "Name",
                        "Value": { "Fn::Join": [ "", [ "shrugcoding-", { "Ref": "EnvironmentName" }, "-subnet-az1" ] ] }
                }]
            }
        },
        "publicSubnet2": {
            "Type": "AWS::EC2::Subnet",
            "Properties": {
                "VpcId": {
                    "Ref": "vpcShrugcoding"
                },
                "AvailabilityZone": {
                    "Fn::Select": [ 1, { "Fn::GetAZs": "" } ]
                },
                "CidrBlock": {
                    "Ref": "PublicSubnetCIDR2"
                },
                "MapPublicIpOnLaunch": true,
                "Tags": [{
                        "Key": "Name",
                        "Value": { "Fn::Join": [ "", [ "shrugcoding-", { "Ref": "EnvironmentName" }, "-subnet-az2" ] ] }
                }]
            }
        },
        "rtbShrugcoding": {
            "Type": "AWS::EC2::RouteTable",
            "Properties": {
                "VpcId": {
                    "Ref": "vpcShrugcoding"
                },
                "Tags": [
                    {
                        "Key": "Name",
                        "Value": {
                            "Fn::Sub": "${EnvironmentName} Public Routes"
                        }
                    }
                ]
            }
        },
        "routeShrugcoding": {
            "Type": "AWS::EC2::Route",
            "DependsOn": "igwaShrugcoding",
            "Properties": {
                "RouteTableId": {
                    "Ref": "rtbShrugcoding"
                },
                "DestinationCidrBlock": "0.0.0.0/0",
                "GatewayId": {
                    "Ref": "igwShrugcoding"
                }
            }
        },
        "subnetRtbAssociation1": {
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "Properties": {
                "RouteTableId": {
                    "Ref": "rtbShrugcoding"
                },
                "SubnetId": {
                    "Ref": "publicSubnet1"
                }
            }
        },
        "subnetRtbAssociation2": {
            "Type": "AWS::EC2::SubnetRouteTableAssociation",
            "Properties": {
                "RouteTableId": {
                    "Ref": "rtbShrugcoding"
                },
                "SubnetId": {
                    "Ref": "publicSubnet2"
                }
            }
        },
        "bucketLandingPage" : {
            "Type": "AWS::S3::Bucket",
            "Properties": {
                "AccessControl": "PublicRead",
                "WebsiteConfiguration": {
                    "IndexDocument": "index.html"
                }
            }
        },
        "recsetLandingPage": {
            "Type": "AWS::Route53::RecordSet",
            "Properties": {
                "Name": { "Ref": "HostedZoneName" },
                "HostedZoneName": { "Ref": "HostedZoneName" },
                "Type": "A",
                "AliasTarget": {
                    "DNSName" : { "Fn::GetAtt": [ "bucketLandingPage", "DomainName" ] },
                    "EvaluateTargetHealth" : false,
                    "HostedZoneId": { "Ref": "HostedZoneId" }
                }
            }
        },
        "accpointLandingPage": {
            "Type": "AWS::S3::AccessPoint",
            "Properties": {
                "Bucket": {
                    "Ref": "bucketLandingPage"
                },
                "Name": "access-point-landing-page",
                "VpcConfiguration": {
                    "VpcId": {
                        "Ref": "vpcShrugcoding"
                    }
                },
                "PublicAccessBlockConfiguration": {
                    "BlockPublicAcls": true,
                    "IgnorePublicAcls": true,
                    "BlockPublicPolicy": true,
                    "RestrictPublicBuckets": true
                }
            }
        }
    },
    "Outputs": {
        "VPC": {
            "Description": "A reference to the created VPC",
            "Value": {
                "Ref": "vpcShrugcoding"
            },
            "Export": {
                "Name": {
                    "Fn::Sub": "${AWS::StackName}-vpcShrugcoding"
                }
            }
        },
        "PublicSubnet1": {
            "Description": "A reference to the public subnets in the 1st Availability Zone",
            "Value": {
                "Ref": "publicSubnet1"
            },
            "Export": {
                "Name": {
                    "Fn::Sub": "${AWS::StackName}-publicSubnet1"
                }
            }
        },
        "PublicSubnet2": {
            "Description": "A reference to the public subnets in the 2nd Availability Zone",
            "Value": {
                "Ref": "publicSubnet2"
            },
            "Export": {
                "Name": {
                    "Fn::Sub": "${AWS::StackName}-publicSubnet2"
                }
            }
        }
    }
}